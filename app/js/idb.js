var _idb={db:null,log:console.log,indexedDB:window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,setLog:function(e){this.log=e||console.log},getListPromise:function(e,o,r,n){return new Promise(function(t,i){var s,c,u=[],a=function(e){(s=e.target.result)&&(u.push(s.value),s.continue())},d=_idb.db.transaction(e),l=d.objectStore(e);o?(index=l.index(o),n||r?(c=n?IDBKeyRange.bound(r,n):IDBKeyRange.only(r),index.openCursor(c).onsuccess=a):index.openCursor().onsuccess=a):l.openCursor().onsuccess=a,l.openCursor().onerror=function(e){t(e)},d.oncomplete=function(e){t(u)},d.onerror=function(e){_idb.log("Error creating listG of projects",e.target),i(e)}})},getListTextSearch:function(e,o){return new Promise(function(r,n){var t,i,s,c=[],u=function(e){t=event.target.result,t?(c.push(t.value),t.continue()):_idb.log("IDBCursor - getListTextSearch cursor - No more events to read")},a=$m.iDB.db.transaction(e);i=a.objectStore(e).index("sKey"),s=IDBKeyRange.bound("a"+o.toLowerCase(),o.toLowerCase()+"z"),i.openCursor(s).onsuccess=u,a.oncomplete=function(e){r(c)},a.onerror=function(e){_idb.log("Error creating list of items - getListTextSearch",e.target),n(e)}})},getItemPromise:function(e,o){return new Promise(function(r,n){var t={},i=_idb.db.transaction(e),s=i.objectStore(e),c=s.get(o);c.onerror=function(e){_idb.log("error retrieving single item from IDB: ",JSON.stringify(e)),t={}},c.onsuccess=function(e){t=c.result?c.result:{}},i.oncomplete=function(e){r(t)},i.onerror=function(e){_idb.log("Error reading IndexedDB - Single item: ",JSON.stringify(e.target)),n(e)}})},getItemsById:function(e,o,r,n){return new Promise(function(t,i){var s,c,u=0,a=[],d=function(e){if(cursor=event.target.result,cursor){if(!o.length)return;u=o.indexOf(cursor.primaryKey),-1!==u&&(a.push(cursor.value),o=o.slice(u+1));try{cursor.continue(o[0])}catch(e){cursor.continue()}}},l=_idb.db.transaction(e),f=l.objectStore(e);o=o.sort(function(e,o){return e-o}).filter(function(e,o,r){return!o||e!==r[o-1]}),r&&n?(s=f.index(r),c=IDBKeyRange.only(n),s.openCursor(c).onsuccess=d):f.openCursor().onsuccess=d,l.oncomplete=function(e){t(a)},l.onerror=function(e){_idb.log("Error reading IndexedDB - List by Ids: ",e.target),i(e)}})},saveListToIDBG:function(e,o,r){var n,t=this.db.transaction(e,"readwrite"),i=t.objectStore(e);if(r)n=i.clear(),n.onsuccess=function(e){for(var r in o)i.add(o[r])};else for(var s in o)i.put(o[s]);t.oncomplete=function(e){},t.onerror=function(e){_idb.log("saveListToIDBG error: ",e.target)}},removeListPromise:function(e,o){var r=this;return new Promise(function(n,t){var i=r.db.transaction(e,"readwrite"),s=i.objectStore(e);for(var c in o)s.delete(o[c]);i.oncomplete=function(e){n()},i.onerror=function(e){_idb.log("removeListFromIDBG error: ",e.target),t(e)}})},saveItemToIDB:function(e,o,r){var n=this.db.transaction(o,"readwrite"),t=n.objectStore(o);if(e){try{r?t.delete(e):(t.put(e),e.mod&&t.delete(e.mod))}catch(o){_idb.log("saveItemToIDB - ERROR while updating (json): ",JSON.stringify(e).substr(0,500))}n.oncomplete=function(e){},n.onerror=function(e){_idb.log("saveItemToIDB - ERROR: ",e.target)}}},searchTreePattern:function(e,o){return new Promise(function(r,n){var t,i,s,c,u=[],a=function(o){cursor=event.target.result,cursor?(s=cursor.source.keyPath!==cursor.value.etype?cursor.value.nIndex:" ",$m.checkPattern(s,e)&&u.push(cursor.value),cursor.continue()):_idb.log("IDBCursor - searchTreePattern - No more events to read")},d=_idb.ongoingTransaction=_idb.db.transaction("tree"),l=d.objectStore("tree");o.length?(c=o[o.length-1],t=l.index(c.etype),i=IDBKeyRange.only(c.eid),t.openCursor(i).onsuccess=a):l.openCursor().onsuccess=a,d.oncomplete=function(e){r(u)},d.onerror=function(o){_idb.log("Error reading IndexedDB - List of found elements by pattern: ",e),n(o)}})}};